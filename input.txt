import tkinter as tk
from tkinter import filedialog
from wand.image import Image
from PIL import Image as PILImage
from PIL import ImageTk
import io
import pytesseract

class ImageEditor:
    def __init__(self, root):
        self.root = root
        root.title("Image Editor")

        self.upload_button = tk.Button(root, text="Upload Image", command=self.upload_image)
        self.upload_button.pack()

        self.canvas_orig = tk.Canvas(root)
        self.canvas_orig.pack(side=tk.LEFT)

        self.canvas_mod = tk.Canvas(root)
        self.canvas_mod.pack(side=tk.RIGHT)

        self.brightness_scale = tk.Scale(root, from_=0, to=2, resolution=0.01, orient=tk.HORIZONTAL, label="Brightness")
        self.brightness_scale.set(1)
        self.brightness_scale.pack()

        self.apply_button = tk.Button(root, text="Apply", command=self.apply_changes)
        self.apply_button.pack()

        self.text_box = tk.Text(root, width=40, height=10)
        self.text_box.pack()

    def upload_image(self):
        file_path = filedialog.askopenfilename()
        if file_path:
            with Image(filename=file_path) as img:
                self.original_img = img.clone()
                self.display_image(img, self.canvas_orig)

    def display_image(self, wand_img, canvas):
        img_byte_arr = io.BytesIO()
        wand_img.save(file=img_byte_arr)
        img_byte_arr.seek(0)
        pil_img = PILImage.open(img_byte_arr)
        tk_img = ImageTk.PhotoImage(pil_img)
        canvas.create_image(0, 0, anchor=tk.NW, image=tk_img)
        canvas.image = tk_img  # keep a reference to prevent garbage collection
        return pil_img  # return PIL image for further processing

    def apply_changes(self):
        with self.original_img.clone() as img:
            img.modulate(brightness=self.brightness_scale.get())
            pil_img = self.display_image(img, self.canvas_mod)
            self.perform_ocr(pil_img)

    def perform_ocr(self, pil_img):
        ocr_text = pytesseract.image_to_string(pil_img, config='--psm 12')
        self.text_box.delete('1.0', tk.END)
        self.text_box.insert(tk.END, ocr_text)

if __name__ == "__main__":
    root = tk.Tk()
    app = ImageEditor(root)
    root.mainloop()
